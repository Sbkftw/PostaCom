openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
  description: PostaCom API
  contact:
    name: Riquette Julien
    email: jriquette@cirb.brussels
  license:
    name: CIRB
servers:
  - url: 'http://localhost:8086'
    description: Generated server url
paths:
  '/api/{postId}/comments':
    get:
      operationId: getComments
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
      tags:
        - Comment
    post:
      operationId: createComment
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDTO'
      responses:
        '200':
          description: default response
      tags:
        - Comment
  /api/users:
    get:
      operationId: getAllUsers
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      tags:
        - User
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: default response
      tags:
        - User
  '/api/posts/{postId}':
    put:
      operationId: likePost
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: default response
      tags:
        - Post
  '/api/posts/api/{postId}':
    get:
      operationId: getPost
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
      tags:
        - Post
  /api/posts:
    get:
      operationId: getPosts
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
      tags:
        - Post
      summary: ''
    post:
      operationId: createPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDTO'
      responses:
        '200':
          description: default response
      tags:
        - Post
  '/api/users/{userId}':
    get:
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - User
    put:
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: default response
      tags:
        - User
components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int32
        message:
          type: string
        publishDate:
          type: string
          format: date-time
        author:
          type: integer
          format: int32
        post:
          type: integer
          format: int32
      x-tags:
        - Comment
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        lastName:
          type: string
        firstName:
          type: string
        email:
          type: string
        gender:
          type: string
        dateOfBirth:
          type: string
          format: date
        registerDate:
          type: string
          format: date
      x-tags:
        - User
    CommentDTO:
      type: object
      x-tags:
        - Comment
      properties:
        message:
          type: string
          minLength: 1
          maxLength: 500
        author:
          type: string
          format: email
        post:
          type: integer
          format: int32
      required:
        - message
        - author
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int32
        text:
          type: string
        likes:
          type: integer
          format: int32
        publishDate:
          type: string
          format: date-time
        author:
          type: integer
          format: int32
      x-tags:
        - Post
    PostDTO:
      required:
        - author
        - text
      type: object
      properties:
        text:
          type: string
        author:
          type: string
      x-tags:
        - Post
    UserDTO:
      type: object
      properties:
        lastName:
          type: string
        firstName:
          type: string
        email:
          type: string
          format: email
        gender:
          type: string
          enum:
            - M
            - F
            - X
        dateOfBirth:
          type: string
          format: date
        registerDate:
          type: string
          format: date
      required:
        - lastName
        - firstName
        - email
        - gender
        - dateOfBirth
        - registerDate
      x-tags:
        - User
tags:
  - name: Post
  - name: Comment
  - name: User
